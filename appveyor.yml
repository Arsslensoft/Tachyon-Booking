#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.0.{build}-{branch}

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: C:\projects\Tachyon-Booking

# set clone depth
clone_depth: 5                      # clone entire repository history if not defined

environment:
  matrix:
  - solution_name: "Tachyon.Booking.sln"
    test_name: "Tachyon.Booking.Tests/Tachyon.Booking.Tests.csproj"
    param: ""

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: false     # set this flag to immediately finish build once one of the jobs fails.

# scripts to run before build
before_build:
  - nuget restore "%solution_name%"
  - cinst opencover.portable
  - cinst codecov



# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
  - msbuild "%solution_name%" %param% /p:Configuration=Debug /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - msbuild "%solution_name%" %param% /p:Configuration=Release /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test: off

test_script:
  - ps: ./coverage.ps1

after_test:
  - codecov -f coverage.xml -t $(CODECOV_TOKEN)

branches:
  only:
    - develop
    - master

cache:
- tools -> build.cake
- packages -> build.cake

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
  - echo on_success

# on build failure
on_failure:
  - echo on_failure

# after build failure or success
on_finish:
  - echo on_finish
